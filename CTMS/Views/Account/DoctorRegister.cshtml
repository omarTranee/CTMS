@model CTMS.ViewModels.DoctorFormViewModel

@{
    ViewBag.Title = "DoctorRegister";
}

<h2>DoctorRegister</h2>

<script src="~/Scripts/jquery-3.3.1.min.js"></script>


<script>
    $(function () {


        $("#St").change(function () {
            $.get("/Home/GetCityByID",
                { ID: $("#St").val() },
                function (data) {
                    $("#city").empty();
                    $.each(data,
                        function (index, row) {
                            $("#city").append(`<option value="${row.Id}">${row.Name}</option>`);
                        });

                });
        });
    });
</script>
@using (Html.BeginForm("DoctorRegister", "Account", FormMethod.Post, new { @class = "form-horizontal form-label-left", autocomplete = "off",enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(m => m.Doctor.Id)
<div class="form-horizontal">
    <h4>DoctorFormViewModel</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })


    <div class="form-group">
        @Html.Label("Name", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.registerViewModel.Name, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.registerViewModel.Name, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.registerViewModel.Email, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.registerViewModel.Email, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.registerViewModel.Email, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Doctor.Gender, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EnumDropDownListFor(model => model.Doctor.Gender, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Doctor.Gender, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Doctor.DoctorImage, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <input type="file" name="upload" />
            @Html.ValidationMessageFor(model => model.Doctor.DoctorImage, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Doctor.Phone, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Doctor.Phone, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Doctor.Phone, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Doctor.Address, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Doctor.Address, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Doctor.Address, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Doctor.DoctorInformation, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Doctor.DoctorInformation, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Doctor.DoctorInformation, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Doctor.Price, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Doctor.Price, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Doctor.Price, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.SpecislityId, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">

            @Html.DropDownListFor(model => model.Doctor.SpecialityId , new SelectList(Model.Specialities, "Id", "Name"), "Select Membership Type", new { @class = "form-control" })

            @Html.ValidationMessageFor(model => model.SpecislityId, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.GovernorateId, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">

            @Html.DropDownListFor(model => model.GovernorateId, new SelectList(Model.Governorates, "Id", "Name"), "Select Membership Type", new { id = "St", @class = "form-control" })

            @Html.ValidationMessageFor(model => model.GovernorateId, "", new { @class = "text-danger" })
        </div>
    </div>


    <div class="form-group">
        @Html.Label("Your City", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <select id="city" class="form-control" name="cityId">
                <option value="-1">Choose area</option>
            </select>
        </div>
    </div>


    <div class="form-group">
        @Html.LabelFor(model => model.registerViewModel.Password, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.registerViewModel.Password, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.registerViewModel.Password, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.registerViewModel.ConfirmPassword, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.registerViewModel.ConfirmPassword, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.registerViewModel.ConfirmPassword, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

@*

    <div class="form-group">
              @Html.LabelFor(model => model.SpecislityId, htmlAttributes: new { @class = "control-label col-md-2" })
              <div class="col-md-10">
                  @Html.EditorFor(model => model.SpecislityId, new { htmlAttributes = new { @class = "form-control" } })
                  @Html.ValidationMessageFor(model => model.SpecislityId, "", new { @class = "text-danger" })
              </div>
          </div>

          <div class="form-group">
              @Html.LabelFor(model => model.GovernorateId, htmlAttributes: new { @class = "control-label col-md-2" })
              <div class="col-md-10">
                  @Html.EditorFor(model => model.GovernorateId, new { htmlAttributes = new { @class = "form-control" } })
                  @Html.ValidationMessageFor(model => model.GovernorateId, "", new { @class = "text-danger" })
              </div>
          </div>

          <div class="form-group">
              @Html.LabelFor(model => model.CityId, htmlAttributes: new { @class = "control-label col-md-2" })
              <div class="col-md-10">
                  @Html.EditorFor(model => model.CityId, new { htmlAttributes = new { @class = "form-control" } })
                  @Html.ValidationMessageFor(model => model.CityId, "", new { @class = "text-danger" })
              </div>
          </div>

*@